version: "3.7"
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    restart: on-failure
  kafka:
    image: wurstmeister/kafka:2.12-2.4.0
    restart: on-failure
    environment:
      PORT_COMMAND: "docker port $$(hostname) 9092/tcp | cut -d: -f2"
      KAFKA_BROKER_ID: "1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:_{PORT_COMMAND}
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "registry_schemas:1:1,stream_example:1:1,batch_example:1:1,develop:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9092
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  registry:
    image: confluentinc/cp-schema-registry:4.0.0-3
    restart: on-failure
    environment:
      - SCHEMA_REGISTRY_DEBUG=true
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9093
      - SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR=1
      - SCHEMA_REGISTRY_KAFKASTORE_TOPIC=registry_schemas
      - SCHEMA_REGISTRY_HOST_NAME=registry
    ports:
      - 8081
    depends_on:
      - kafka
